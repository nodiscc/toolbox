image: debian:bullseye-slim

stages:
   - test
   - package
   - pages
   # - deploy

default:
  before_script:
    - apt-get update && apt-get -qy install ca-certificates
    - export LANG=C.UTF-8

test:
  stage: test
  interruptible: true
  script:
    - apt-get install -y shellcheck python3-venv wget make git
    - make tests

build-packages:
  stage: package
  interruptible: true
  script:
    - apt-get update
    - apt-get install -qy --no-install-recommends make wget lintian # common
    - apt-get install -qy --no-install-recommends unzip # bleachbit-cleanerml
    - apt-get install -qy --no-install-recommends gcc checkinstall libpurple-dev libglib2.0-dev libjson-glib-dev libnss3-dev libsecret-1-dev # pidgin-opensteamworks
    - make packaging
  artifacts:
    when: on_success
    expire_in: 1 week
    paths:
      - PACKAGING/dist/*

test-packages:
  stage: package
  interruptible: true
  needs:
    - build-packages
  script:
    - dpkg -i --force-depends PACKAGING/dist/*.deb

pages:
  stage: pages
  interruptible: true
  needs:
    - build-packages
    - test-packages
  dependencies:
    - build-packages
    - test-packages
  only:
    - master
  before_script:
    - apt-get update -qy > /dev/null && apt-get -qy install aptly
    - gpg --import --no-tty --batch --yes ${APTLY_GPG_PRIVATE_KEY}
    - aptly repo create -distribution=bullseye -component=main public
    - echo -e "use-agent\npinentry-mode loopback" > ~/.gnupg/gpg.conf
    - echo "allow-loopback-pinentry" > ~/.gnupg/gpg-agent.conf
  script:
    - aptly repo add public ./PACKAGING/dist/
    - aptly publish repo -batch -passphrase=${APTLY_GPG_PASSPHRASE} -gpg-key="${APTLY_GPG_KEY_ID}" public
    - mv ~/.aptly/public .
    - gpg --armor --output public/gpg.key --export ${APTLY_GPG_KEY_ID}
    - echo -e "<pre>Add this repository to your APT sources list:\ndeb https://nodiscc.gitlab.io/toolbox/ bullseye main\nSources\:https://gitlab.com/nodiscc/toolbox/\nBuild logs:https://gitlab.com/nodiscc/toolbox/-/pipelines?page=1&scope=all&ref=master" > public/index.html
    - find public/pool/ -type f >> public/index.html
    - echo -e "\n</pre>" >> public/index.html
  artifacts:
    paths:
      - public

### EXAMPLE GITLAB DEPLOYMENT JOB ###
# These jobs are shown in the -/environments tab
# deploy_dev:
#   stage: deploy
#   script:
#     - echo "Deploy to dev server"
#   environment:
#     name: dev
#     url: https://dev.example.com

# deploy_qa:
#   stage: deploy
#   script:
#     - echo "Deploy to qa server"
#   environment:
#     name: qa
#     url: https://qa.example.com

# deploy_prod:
#   stage: deploy
#   script:
#     - echo "Deploy to prod server"
#   environment:
#     name: prod
#     url: https://prod.example.com
#   only:
#     - tags
