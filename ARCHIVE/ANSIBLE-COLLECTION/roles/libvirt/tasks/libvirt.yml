- name: install libvirt tools
  apt:
    state: present
    package:
      - virt-manager
      - virtinst
      - virt-viewer
      - dnsmasq-base
      - libvirt-daemon-system
      - gir1.2-spiceclientgtk-3.0
      - qemu-kvm
      - qemu-utils
      - netcat-openbsd
      # - ebtables

- name: configure libvirt-guests
  template:
    src: etc_default_libvirt-guests.j2
    dest: /etc/default/libvirt-guests
    owner: root
    group: root
    mode: 0644

- name: configure libvirt port forwards
  template:
    src: etc_libvirt_hooks_qemu.j2
    dest: /etc/libvirt/hooks/qemu
    owner: root
    group: root
    mode: 0755
  notify: restart libvirtd
  ignore_errors: "{{ ansible_check_mode }}"

- name: configure libvirt networks
  community.libvirt.virt_net:
    name: "{{ item.name }}"
    command: define
    xml: "{{ lookup('template', 'network.xml.j2' ) }}"
    autostart: "{{ item.autostart | default(True) }}"
    state: "{{ item.state | default('active') }}"
  with_items: "{{ libvirt_networks }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: create storage pool paths
  file:
    state: directory
    path: "{{ item.path }}"
  with_items: "{{ libvirt_storage_pools }}"
  ignore_errors: "{{ ansible_check_mode }}"

# TODO autostart does not work
- name: create storage pools
  community.libvirt.virt_pool:
    name: "{{ item.name }}"
    command: define
    xml: "{{ lookup('template', 'pool.xml.j2' ) }}"
    autostart: "{{ item.autostart | default(True) }}"
    state: "{{ item.state | default('active') }}"
  with_items: "{{ libvirt_storage_pools }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: define virtual machines
  community.libvirt.virt:
    command: define
    xml: "{{ lookup('template', 'vm.xml.j2' ) }}"
    autostart: "{{ item.autostart | default(True) }}"
  when: item.state != 'absent'
  with_items: "{{ libvirt_vms }}"
  ignore_errors: "{{ ansible_check_mode }}"

#- name: delete virtual machines # TODO
