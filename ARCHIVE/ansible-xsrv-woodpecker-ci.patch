From a8dd3b16dc659e8d2c6bd7c62e9a11bc0fade2c7 Mon Sep 17 00:00:00 2001
From: nodiscc <nodiscc@gmail.com>
Date: Mon, 11 Jul 2022 22:52:46 +0200
Subject: [PATCH] add woodpecker role (continuous integration/CI/CD service) -
 allow configuration of basic server/agent settings - allow configuration of
 the gitea integration - allow deploying the server and agent separately -
 setup integration with netdata/fail2ban/apache - install
 woodpecker-server/agent from binary and run them using systemd services,
 under dedicated user accounts - allow enabling/disabling
 woodpecker-server/agent services - update tests - update example playbook,
 add xsrv_admin_username as woodpecker admin by default - store sensitive
 values in configuration/environment file -
 https://github.com/woodpecker-ci/woodpecker/releases
 https://woodpecker-ci.org/
 https://woodpecker-ci.org/docs/administration/setup
 https://woodpecker-ci.org/docs/administration/server-config
 https://woodpecker-ci.org/docs/administration/forges/gitea
 https://woodpecker-ci.org/docs/administration/proxy
 https://woodpecker-ci.org/docs/usage/intro
 https://woodpecker-ci.org/docs/usage/pipeline-syntax
 https://woodpecker-ci.org/docs/usage/environment
 https://woodpecker-ci.org/docs/usage/project-settings
 https://woodpecker-ci.org/docs/cli
 https://woodpecker-ci.org/docs/usage/badges


---
 .../my.example.org/my.example.org.vault.yml   |  6 ++
 .../my.example.org/my.example.org.yml         |  4 +
 playbooks/xsrv/playbook.yml                   |  1 +
 roles/gitea/defaults/main.yml                 |  2 +-
 roles/woodpecker/README.md                    | 75 ++++++++++++++++
 roles/woodpecker/defaults/main.yml            | 44 ++++++++++
 roles/woodpecker/handlers/main.yml            | 17 ++++
 roles/woodpecker/meta/main.yml                | 24 ++++++
 roles/woodpecker/tasks/apache.yml             | 27 ++++++
 roles/woodpecker/tasks/checks.yml             | 42 +++++++++
 roles/woodpecker/tasks/fact.yml               | 13 +++
 roles/woodpecker/tasks/fail2ban.yml           |  7 ++
 roles/woodpecker/tasks/main.yml               | 63 ++++++++++++++
 roles/woodpecker/tasks/netdata.yml            | 14 +++
 roles/woodpecker/tasks/ssl-selfsigned.yml     | 30 +++++++
 roles/woodpecker/tasks/woodpecker-agent.yml   | 85 +++++++++++++++++++
 roles/woodpecker/tasks/woodpecker-server.yml  | 76 +++++++++++++++++
 .../etc_ansible_facts.d_woodpecker.fact.j2    |  3 +
 ...apache2_sites-available_woodpecker.conf.j2 | 29 +++++++
 ...a_go.d_httpcheck.conf.d_woodpecker.conf.j2 |  9 ++
 ...h.d_systemdunits.conf.d_woodpecker.conf.j2 | 20 +++++
 ...systemd_system_woodpecker-agent.service.j2 | 20 +++++
 ...ystemd_system_woodpecker-server.service.j2 | 21 +++++
 .../templates/etc_woodpecker-agent.conf.j2    |  6 ++
 .../templates/etc_woodpecker-server.conf.j2   | 13 +++
 tests/playbooks/xsrv-test/playbook.yml        |  1 +
 26 files changed, 651 insertions(+), 1 deletion(-)
 create mode 100644 roles/woodpecker/README.md
 create mode 100644 roles/woodpecker/defaults/main.yml
 create mode 100644 roles/woodpecker/handlers/main.yml
 create mode 100644 roles/woodpecker/meta/main.yml
 create mode 100644 roles/woodpecker/tasks/apache.yml
 create mode 100644 roles/woodpecker/tasks/checks.yml
 create mode 100644 roles/woodpecker/tasks/fact.yml
 create mode 100644 roles/woodpecker/tasks/fail2ban.yml
 create mode 100644 roles/woodpecker/tasks/main.yml
 create mode 100644 roles/woodpecker/tasks/netdata.yml
 create mode 100644 roles/woodpecker/tasks/ssl-selfsigned.yml
 create mode 100644 roles/woodpecker/tasks/woodpecker-agent.yml
 create mode 100644 roles/woodpecker/tasks/woodpecker-server.yml
 create mode 100644 roles/woodpecker/templates/etc_ansible_facts.d_woodpecker.fact.j2
 create mode 100644 roles/woodpecker/templates/etc_apache2_sites-available_woodpecker.conf.j2
 create mode 100644 roles/woodpecker/templates/etc_netdata_go.d_httpcheck.conf.d_woodpecker.conf.j2
 create mode 100644 roles/woodpecker/templates/etc_netdata_health.d_systemdunits.conf.d_woodpecker.conf.j2
 create mode 100644 roles/woodpecker/templates/etc_systemd_system_woodpecker-agent.service.j2
 create mode 100644 roles/woodpecker/templates/etc_systemd_system_woodpecker-server.service.j2
 create mode 100644 roles/woodpecker/templates/etc_woodpecker-agent.conf.j2
 create mode 100644 roles/woodpecker/templates/etc_woodpecker-server.conf.j2

diff --git a/playbooks/xsrv/host_vars/my.example.org/my.example.org.vault.yml b/playbooks/xsrv/host_vars/my.example.org/my.example.org.vault.yml
index d5a6ec60..304c61dd 100644
--- a/playbooks/xsrv/host_vars/my.example.org/my.example.org.vault.yml
+++ b/playbooks/xsrv/host_vars/my.example.org/my.example.org.vault.yml
@@ -77,3 +77,9 @@ jitsi_turn_secret: "CHANGEME16"
 jitsi_users:
   - name: "{{ xsrv_admin_username }}"
     password: "{{ xsrv_admin_password }}"
+
+##### WOODPECKER - https://gitlab.com/nodiscc/xsrv/-/blob/master/roles/woodpecker/defaults/main.yml
+woodpecker_gitea_client_id: "CHANGEME"
+woodpecker_gitea_client_secret: "CHANGEME"
+woodpecker_agent_secret: "CHANGEME30"
+woodpecker_admin: "{{ xsrv_admin_username }}"
diff --git a/playbooks/xsrv/host_vars/my.example.org/my.example.org.yml b/playbooks/xsrv/host_vars/my.example.org/my.example.org.yml
index e2a030e4..48e5cab5 100644
--- a/playbooks/xsrv/host_vars/my.example.org/my.example.org.yml
+++ b/playbooks/xsrv/host_vars/my.example.org/my.example.org.yml
@@ -70,3 +70,7 @@ wireguard_server_public_ip: "CHANGEME"
 
 ##### JITSI - https://gitlab.com/nodiscc/xsrv/-/blob/master/roles/jitsi/defaults/main.yml
 jitsi_fqdn: "conference.CHANGEME.org"
+
+##### WOODPECKER - https://gitlab.com/nodiscc/xsrv/-/blob/master/roles/woodpecker/defaults/main.yml
+woodpecker_fqdn: "ci.CHANGEME.org"
+woodpecker_gitea_skip_verify: yes # required since the default gitea configuration uses self-signed certificates
diff --git a/playbooks/xsrv/playbook.yml b/playbooks/xsrv/playbook.yml
index 824bffa9..995b8813 100644
--- a/playbooks/xsrv/playbook.yml
+++ b/playbooks/xsrv/playbook.yml
@@ -12,6 +12,7 @@
     # - nodiscc.xsrv.rss_bridge # the RSS feed for websites missing it
     # - nodiscc.xsrv.shaarli # bookmarking & link sharing
     # - nodiscc.xsrv.gitea # git service/software forge
+    # - nodiscc.xsrv.woodpecker # continuous integration (CI/CD) service
     # - nodiscc.xsrv.transmission # bittorrent client
     # - nodiscc.xsrv.mumble # VoIP/voice chat server
     # - nodiscc.xsrv.docker # application containerization
diff --git a/roles/gitea/defaults/main.yml b/roles/gitea/defaults/main.yml
index 3bdc858a..958eebde 100644
--- a/roles/gitea/defaults/main.yml
+++ b/roles/gitea/defaults/main.yml
@@ -70,7 +70,7 @@ gitea_enable_webhooks: yes
 # list of hosts that can be called from webhooks
 # accepts: my.example.org (hostname), *.example.org (wildcards), 192.168.1.0/24 (IP network), loopback (localhost), private (LAN/intranet), external (public hosts on internet), * (all hosts)
 gitea_webhook_allowed_hosts:
-  - "external"
+  - "{{ woodpecker_fqdn | default('') }}"
 # port to expose in the clone URL
 gitea_ssh_url_port: 22
 # enable outgoing mail (yes/no)
diff --git a/roles/woodpecker/README.md b/roles/woodpecker/README.md
new file mode 100644
index 00000000..08085989
--- /dev/null
+++ b/roles/woodpecker/README.md
@@ -0,0 +1,75 @@
+# xsrv.woodpecker
+
+This role will install [Woodpecker CI](https://woodpecker-ci.org/), a simple [Continuous Integration](https://en.wikipedia.org/wiki/Continuous_integration) engine with great extensibility.
+
+## Requirements/dependencies/example playbook
+
+See [meta/main.yml](meta/main.yml)
+
+```yaml
+# playbook.yml
+- hosts: my.CHANGEME.org
+  roles:
+    - nodiscc.xsrv.common # (optional) base systemd setup, hardening, bruteforce prevention
+    - nodiscc.xsrv.monitoring # (optional) CI service health monitoring
+    - nodiscc.xsrv.apache # (required if woodpecker_setup_server) reverse proxy and SSL/TLS certificates
+    - nodiscc.xsrv.woodpecker
+
+# required variables
+# host_vars/my.CHANGEME.org/my.CHANGEME.org.yml
+woodpecker_fqdn: "ci.CHANGEME.org"
+
+# ansible-vault edit host_vars/my.CHANGEME.org/my.CHANGEME.org.vault.yml
+woodpecker_gitea_client_id: "CHANGEME"
+woodpecker_gitea_client_secret: "CHANGEME"
+woodpecker_agent_secret: "CHANGEME"
+woodpecker_admin: "CHANGEME"
+```
+
+See [defaults/main.yml](defaults/main.yml) for all configuration variables.
+
+An oAuth2 application must be created manually in Gitea beforehand (<https://git.CHANGEME.org/user/settings/applications>), `Redirect URI` must be set to `https://ci.CHANGEME.org/authorize`.
+
+## Usage
+
+**Gitea:** Click `Login` in the web interface and authorize the Woodpecker oAuth2 application to access your Gitea account. Click `+Add repository` to [enable woodpecker integration](https://woodpecker-ci.org/docs/usage/intro) on the desired repositories. You may want to adjust [settings](https://woodpecker-ci.org/docs/usage/project-settings) for each project.
+
+You may now start adding [pipelines](https://woodpecker-ci.org/docs/usage/pipeline-syntax) to your projects.
+
+See [Woodpecker documentation](https://woodpecker-ci.org/docs/intro) for more info.
+
+### Backups
+
+TODO /var/lib/woodpecker-server/woodpecker.sqlite
+
+
+### Uninstallation
+
+```bash
+sudo systemctl stop woodpecker-server woodpecker-agent
+sudo userdel woodpecker-server
+sudo userdel woodpecker-agent
+sudo rm -r /etc/apache2/sites-available/woodpecker.conf /etc/apache2/sites-enabled/woodpecker.conf /var/lib/woodpecker-server /var/lib/woodpecker-agent /usr/local/bin/woodpecker-server /usr/local/bin/woodpecker-agent /etc/woodpecker-server.conf /etc/woodpecker-agent.conf /etc/systemd/system/woodpecker-server.service /etc/systemd/system/woodpecker-agent.service /etc/netdata/health.d/systemdunits.conf.d/woodpecker.conf /etc/ansible/facts.d/woodpecker.fact
+sudo systemctl daemon-reload
+sudo systemctl reload apache2
+sudo systemctl restart netdata
+```
+
+## License
+
+[GNU GPLv3](../../LICENSE)
+
+
+## References
+
+- https://stdout.root.sx/links/?searchtags=cicd
+- https://stdout.root.sx/links/?searchterm=woodpecker
+
+## New role checklist
+
+- [x] Add the role to the [test playbook](https://gitlab.com/nodiscc/xsrv/-/blob/master/tests/playbook.yml)
+- [ ] `make doc`
+- [ ] Update `CHANGELOG.md`
diff --git a/roles/woodpecker/defaults/main.yml b/roles/woodpecker/defaults/main.yml
new file mode 100644
index 00000000..80b601a6
--- /dev/null
+++ b/roles/woodpecker/defaults/main.yml
@@ -0,0 +1,44 @@
+##### WOODPECKER CI/CD SERVICE #####
+# yes/no: setup the CI server/web interface
+woodpecker_setup_server: yes
+# fully qualified domain name of the woodpecker server
+woodpecker_fqdn: "ci.CHANGEME.org"
+# HTTPS and SSL/TLS certificate mode for the woodpecker webserver virtualhost
+#   letsencrypt: acquire a certificate from letsencrypt.org
+#   selfsigned: generate a self-signed certificate
+woodpecker_https_mode: selfsigned
+# yes/no: enable gitea integration
+woodpecker_gitea: yes
+# URL of the gitea server
+woodpecker_gitea_url: "https://{{ gitea_fqdn }}"
+# yes/no: skip verification of the gitea instance's SSL certificate
+woodpecker_gitea_skip_verify: no
+# client ID and secret of the gitea oauth2 application
+woodpecker_gitea_client_id: "CHANGEME"
+woodpecker_gitea_client_secret: "CHANGEME"
+# log level of the woodpecker-server systemd service (trace/debug/info/warn/error/fatal/panic/disabled)
+woodpecker_server_log_level: "warn"
+# comma-separated list of admin accounts
+woodpecker_admin: "CHANGEME"
+# secret used to authenticate agents, always required
+woodpecker_agent_secret: "CHANGEME"
+# yes/no: enable/disable the woodpecker-server service
+woodpecker_server_enable_service: yes
+
+# yes/no: setup the CI agent/job runner
+woodpecker_setup_agent: yes
+# hostname and port of the gitea CI server to poll for jobs
+woodpecker_agent_server: "localhost:8722"
+# log level of the woodpecker-agent systemd service (trace/debug/info/warn/error/fatal/panic/disabled)
+woodpecker_agent_log_level: "warn"
+# agent hostname
+woodpecker_agent_hostname: "{{ inventory_hostname }}"
+# number of max. parallel builds
+woodpecker_agent_max_procs: 2
+# backend engine to run pipelines on (auto-detect/docker/local/ssh)
+woodpecker_agent_backend: docker
+# yes/no: enable/disable the woodpecker-agent service
+woodpecker_agent_enable_service: yes
+
+# version number without leading v, https://github.com/woodpecker-ci/woodpecker/releases
+woodpecker_version: "0.15.5"
diff --git a/roles/woodpecker/handlers/main.yml b/roles/woodpecker/handlers/main.yml
new file mode 100644
index 00000000..f73ac359
--- /dev/null
+++ b/roles/woodpecker/handlers/main.yml
@@ -0,0 +1,17 @@
+- name: restart woodpecker-server
+  service:
+    name: woodpecker-server
+    state: restarted
+    enabled: yes
+  become: yes
+  when: woodpecker_server_enable_service|bool
+  ignore_errors: "{{ ansible_check_mode }}"
+
+- name: restart woodpecker-agent
+  service:
+    name: woodpecker-agent
+    state: restarted
+    enabled: yes
+  become: yes
+  when: woodpecker_agent_enable_service|bool
+  ignore_errors: "{{ ansible_check_mode }}"
diff --git a/roles/woodpecker/meta/main.yml b/roles/woodpecker/meta/main.yml
new file mode 100644
index 00000000..9b10a86f
--- /dev/null
+++ b/roles/woodpecker/meta/main.yml
@@ -0,0 +1,24 @@
+# @tag woodpecker - setup woodpecker CI service
+# @tag woodpecker-server - setup woodpecker CI server
+# @tag woodpecker-agent - setup woodpecker CI agent/runner
+
+galaxy_info:
+  role_name: woodpecker
+  author: "nodiscc <nodiscc@gmail.com>"
+  description: "Continuous Integration (CI/CD) engine"
+  license: "GPL-3.0"
+  min_ansible_version: 2.12
+  platforms:
+    - name: Debian
+      versions:
+        - 11
+  galaxy_tags:
+    - woodpecker
+    - ci
+    - cd
+    - continuous
+    - integration
+    - gitea
+    - build
+dependencies:
+  - nodiscc.xsrv.handlers
diff --git a/roles/woodpecker/tasks/apache.yml b/roles/woodpecker/tasks/apache.yml
new file mode 100644
index 00000000..b697724e
--- /dev/null
+++ b/roles/woodpecker/tasks/apache.yml
@@ -0,0 +1,27 @@
+- name: enable apache2 modules
+  command: a2enmod {{ item }}
+  with_items:
+    - ssl
+    - proxy_http
+  args:
+    creates: "/etc/apache2/mods-enabled/{{ item }}.load"
+  notify: reload apache
+
+- name: copy apache2 virtualhost configuration
+  template:
+    src: etc_apache2_sites-available_woodpecker.conf.j2
+    dest: /etc/apache2/sites-available/woodpecker.conf
+    mode: 0644
+  notify: reload apache
+
+- name: enable apache2 virtualhost
+  command: a2ensite woodpecker
+  args:
+    creates: "/etc/apache2/sites-enabled/woodpecker.conf"
+  notify: reload apache
+
+- name: add a hosts file entry for the woodpecker server fqdn
+  lineinfile:
+    path: /etc/hosts
+    line: '127.0.0.1	{{ woodpecker_fqdn }}' # noqa no-tabs
+    state: present
diff --git a/roles/woodpecker/tasks/checks.yml b/roles/woodpecker/tasks/checks.yml
new file mode 100644
index 00000000..1becd569
--- /dev/null
+++ b/roles/woodpecker/tasks/checks.yml
@@ -0,0 +1,42 @@
+- name: check that mandatory variables are correctly defined
+  assert:
+    quiet: yes
+    that: "{{ item }}"
+    fail_msg: "One or more variables are not correctly defined. Check role documentation: https://gitlab.com/nodiscc/xsrv/-/tree/master/roles/woodpecker"
+  with_items:
+    - woodpecker_setup_server == woodpecker_setup_server|bool
+    - woodpecker_setup_server == woodpecker_setup_agent|bool
+
+- name: check that mandatory variables are correctly defined (woodpecker-server)
+  assert:
+    quiet: yes
+    that: "{{ item }}"
+    fail_msg: "One or more variables are not correctly defined. Check role documentation: https://gitlab.com/nodiscc/xsrv/-/tree/master/roles/woodpecker"
+  when: woodpecker_setup_server|bool
+  with_items:
+    - woodpecker_fqdn is not search("CHANGEME")
+    - woodpecker_https_mode in ['selfsigned', 'letsencrypt']
+    - woodpecker_gitea == woodpecker_gitea|bool
+    - woodpecker_gitea_skip_verify == woodpecker_gitea_skip_verify|bool
+    - woodpecker_gitea_url is not search("CHANGEME")
+    - woodpecker_gitea_client_id is not search("CHANGEME")
+    - woodpecker_gitea_client_secret is not search("CHANGEME")
+    - woodpecker_server_log_level in ['trace', 'debug', 'info', 'warn', 'error', 'fatal', 'panic', 'disabled']
+    - woodpecker_admin is not search("CHANGEME")
+    - woodpecker_agent_secret is not search("CHANGEME")
+    - woodpecker_server_enable_service == woodpecker_server_enable_service|bool
+
+- name: check that mandatory variables are correctly defined (woodpecker-agent)
+  assert:
+    quiet: yes
+    that: "{{ item }}"
+    fail_msg: "One or more variables are not correctly defined. Check role documentation: https://gitlab.com/nodiscc/xsrv/-/tree/master/roles/woodpecker"
+  when: woodpecker_setup_agent|bool
+  with_items:
+    - woodpecker_agent_server is string
+    - woodpecker_agent_log_level in ['trace', 'debug', 'info', 'warn', 'error', 'fatal', 'panic', 'disabled']
+    - woodpecker_agent_hostname is string
+    - woodpecker_agent_max_procs == woodpecker_agent_max_procs|int
+    - woodpecker_agent_backend in ['auto-detect', 'docker', 'local', 'ssh']
+    - woodpecker_agent_secret is not search("CHANGEME")
+    - woodpecker_agent_enable_service == woodpecker_agent_enable_service|bool
diff --git a/roles/woodpecker/tasks/fact.yml b/roles/woodpecker/tasks/fact.yml
new file mode 100644
index 00000000..b124fb02
--- /dev/null
+++ b/roles/woodpecker/tasks/fact.yml
@@ -0,0 +1,13 @@
+- name: create ansible facts.d directory
+  file:
+    path: /etc/ansible/facts.d
+    state: directory
+    mode: 0755
+
+- name: create woodpecker fact file
+  template:
+    src: etc_ansible_facts.d_woodpecker.fact.j2
+    dest: /etc/ansible/facts.d/woodpecker.fact
+    mode: 0644
+  notify: update ansible facts
+  ignore_errors: "{{ ansible_check_mode }}"
diff --git a/roles/woodpecker/tasks/fail2ban.yml b/roles/woodpecker/tasks/fail2ban.yml
new file mode 100644
index 00000000..b0d07b33
--- /dev/null
+++ b/roles/woodpecker/tasks/fail2ban.yml
@@ -0,0 +1,7 @@
+- name: copy woodpecker fail2ban jail config
+  template:
+    src: etc_fail2ban_jail.d_woodpecker.conf.j2
+    dest: /etc/fail2ban/jail.d/woodpecker.conf
+    mode: 0600
+  tags: fail2ban
+  notify: reload fail2ban
diff --git a/roles/woodpecker/tasks/main.yml b/roles/woodpecker/tasks/main.yml
new file mode 100644
index 00000000..a894f540
--- /dev/null
+++ b/roles/woodpecker/tasks/main.yml
@@ -0,0 +1,63 @@
+# tasks for woodpecker role
+
+- include: checks.yml
+  tags:
+    - woodpecker
+    - checks
+
+- include: ssl-selfsigned.yml
+  become: yes
+  tags:
+    - woodpecker
+    - ssl
+
+- include: woodpecker-server.yml
+  become: yes
+  tags:
+    - woodpecker
+    - woodpecker-server
+
+- include: apache.yml
+  become: yes
+  tags:
+    - woodpecker
+    - apache
+  when:
+    - ansible_local.apache.ansible_managed is defined
+    - ansible_local.apache.ansible_managed|bool
+
+- include: woodpecker-agent.yml
+  become: yes
+  tags:
+    - woodpecker
+    - woodpecker-agent
+
+# - include: fail2ban.yml
+#   become: yes
+#   tags:
+#     - woodpecker
+#     - fail2ban
+#   when:
+#     - ansible_local.fail2ban.ansible_managed is defined
+#     - ansible_local.fail2ban.ansible_managed|bool
+
+- include: netdata.yml
+  become: yes
+  tags:
+    - woodpecker
+    - monitoring
+    - netdata
+  when:
+    - ansible_local.netdata.ansible_managed is defined
+    - ansible_local.netdata.ansible_managed|bool
+
+- include: fact.yml
+  become: yes
+  tags: woodpecker
+
+- name: apply configuration (flush handlers)
+  meta: flush_handlers
+  tags:
+    - woodpecker
+    - monitoring
+    - fail2ban
diff --git a/roles/woodpecker/tasks/netdata.yml b/roles/woodpecker/tasks/netdata.yml
new file mode 100644
index 00000000..44dafb0f
--- /dev/null
+++ b/roles/woodpecker/tasks/netdata.yml
@@ -0,0 +1,14 @@
+- name: install netdata systemd/http checks/alarms for woodpecker
+  template:
+    src: "{{ item.src }}"
+    dest: "{{ item.dest }}"
+    owner: root
+    group: netdata
+    mode: 0640
+  notify: assemble netdata configuration
+  ignore_errors: "{{ ansible_check_mode }}"
+  with_items:
+    - src: etc_netdata_health.d_systemdunits.conf.d_woodpecker.conf.j2
+      dest: /etc/netdata/health.d/systemdunits.conf.d/woodpecker.conf
+    - src: etc_netdata_go.d_httpcheck.conf.d_woodpecker.conf.j2
+      dest: "/etc/netdata/go.d/httpcheck.conf.d/woodpecker.conf"
diff --git a/roles/woodpecker/tasks/ssl-selfsigned.yml b/roles/woodpecker/tasks/ssl-selfsigned.yml
new file mode 100644
index 00000000..aff34b37
--- /dev/null
+++ b/roles/woodpecker/tasks/ssl-selfsigned.yml
@@ -0,0 +1,30 @@
+- name: install requirements for SSL/TLS certificates generation
+  apt:
+    state: present
+    package:
+      - python3-openssl
+      - ssl-cert
+
+- name: generate openssl private key
+  openssl_privatekey:
+    path: "/etc/ssl/private/{{ woodpecker_fqdn }}.key"
+  notify: restart apache
+  ignore_errors: "{{ ansible_check_mode }}"
+
+- name: generate openssl certificate signing request
+  openssl_csr:
+    path: "/etc/ssl/private/{{ woodpecker_fqdn }}.csr"
+    privatekey_path: "/etc/ssl/private/{{ woodpecker_fqdn }}.key"
+    common_name: "{{ woodpecker_fqdn }}"
+    key_usage: "digitalSignature,keyEncipherment"
+    basicConstraints: "CA:TRUE"
+  ignore_errors: "{{ ansible_check_mode }}"
+
+- name: generate self-signed openssl certificate
+  openssl_certificate:
+    path: "/etc/ssl/certs/{{ woodpecker_fqdn }}.crt"
+    privatekey_path: "/etc/ssl/private/{{ woodpecker_fqdn }}.key"
+    csr_path: "/etc/ssl/private/{{ woodpecker_fqdn }}.csr"
+    provider: selfsigned
+  notify: restart apache
+  ignore_errors: "{{ ansible_check_mode }}"
diff --git a/roles/woodpecker/tasks/woodpecker-agent.yml b/roles/woodpecker/tasks/woodpecker-agent.yml
new file mode 100644
index 00000000..fb40d3e7
--- /dev/null
+++ b/roles/woodpecker/tasks/woodpecker-agent.yml
@@ -0,0 +1,85 @@
+### WOODPECKER AGENT ###
+
+- name: create woodpecker-agent user
+  user:
+    name: woodpecker-agent
+    system: yes
+    shell: /usr/sbin/nologin
+    comment: 'Continuous integration (CI/CD) agent/job runner'
+    password: '*'
+    home: /var/lib/woodpecker-agent
+
+- name: download woodpecker agent tarball
+  get_url:
+    url: https://github.com/woodpecker-ci/woodpecker/releases/download/v{{ woodpecker_version }}/woodpecker-agent_linux_amd64.tar.gz
+    dest: "/root/woodpecker-agent_v{{ woodpecker_version }}_linux_amd64.tar.gz"
+    owner: root
+    group: root
+    mode: 0640
+
+- name: create woodpecker agent tarball extraction directory
+  file:
+    path: /root/woodpecker-agent-unpack
+    state: directory
+    mode: 0750
+
+- name: extract woodpecker agent tarball
+  unarchive:
+    src: "/root/woodpecker-agent_v{{ woodpecker_version }}_linux_amd64.tar.gz"
+    dest: "/root/woodpecker-agent-unpack"
+    remote_src: yes
+    mode: u=rwX
+  diff: no
+  ignore_errors: "{{ ansible_check_mode }}"
+
+- name: copy woodpecker-agent binary
+  copy:
+    src: "/root/woodpecker-agent-unpack/woodpecker-agent"
+    dest: "/usr/local/bin/woodpecker-agent"
+    mode: 0755
+    remote_src: yes
+    owner: root
+    group: root
+  notify: restart woodpecker-agent
+  ignore_errors: "{{ ansible_check_mode }}"
+
+- name: copy woodpecker-agent configuration
+  template:
+    src: etc_woodpecker-agent.conf.j2
+    dest: /etc/woodpecker-agent.conf
+    owner: root
+    group: woodpecker-agent
+    mode: 0640
+  notify: restart woodpecker-agent
+  ignore_errors: "{{ ansible_check_mode }}"
+
+- name: install woodpecker-agent systemd service/unit file
+  template:
+    src: "etc_systemd_system_woodpecker-agent.service.j2"
+    dest: "/etc/systemd/system/woodpecker-agent.service"
+    mode: 0644
+  notify:
+    - reload systemd unit files
+    - restart woodpecker-agent
+
+##### PERMISSIONS #####
+
+- name: add the woodpecker-agent user to the docker group
+  user:
+    name: woodpecker-agent
+    groups: docker
+    append: yes
+  when: woodpecker_agent_backend == "docker"
+
+##### SERVICE #####
+
+- name: enable/disable start/stop woodpecker-agent service
+  systemd:
+    name: woodpecker-agent
+    enabled: "{{ woodpecker_agent_enable_service }}"
+    state: "{{ 'started' if woodpecker_agent_enable_service else 'stopped' }}"
+  ignore_errors: "{{ ansible_check_mode }}"
+
+# re-read systemd service configuration
+- name: apply configuration (flush handlers)
+  meta: flush_handlers
diff --git a/roles/woodpecker/tasks/woodpecker-server.yml b/roles/woodpecker/tasks/woodpecker-server.yml
new file mode 100644
index 00000000..916715ee
--- /dev/null
+++ b/roles/woodpecker/tasks/woodpecker-server.yml
@@ -0,0 +1,76 @@
+### WOODPECKER SERVER ###
+
+- name: create woodpecker-server user
+  user:
+    name: woodpecker-server
+    system: yes
+    shell: /usr/sbin/nologin
+    comment: 'Continuous integration (CI/CD) server/web interface'
+    password: '*'
+    home: /var/lib/woodpecker-server
+
+- name: download woodpecker server tarball
+  get_url:
+    url: https://github.com/woodpecker-ci/woodpecker/releases/download/v{{ woodpecker_version }}/woodpecker-server_linux_amd64.tar.gz
+    dest: "/root/woodpecker-server_v{{ woodpecker_version }}_linux_amd64.tar.gz"
+    owner: root
+    group: root
+    mode: 0640
+
+- name: create woodpecker server tarball extraction directory
+  file:
+    path: /root/woodpecker-server-unpack
+    state: directory
+    mode: 0750
+
+- name: extract woodpecker server tarball
+  unarchive:
+    src: "/root/woodpecker-server_v{{ woodpecker_version }}_linux_amd64.tar.gz"
+    dest: "/root/woodpecker-server-unpack"
+    remote_src: yes
+    mode: u=rwX
+  diff: no
+  ignore_errors: "{{ ansible_check_mode }}"
+
+- name: copy woodpecker-server binary
+  copy:
+    src: "/root/woodpecker-server-unpack/woodpecker-server"
+    dest: "/usr/local/bin/woodpecker-server"
+    mode: 0755
+    remote_src: yes
+    owner: root
+    group: root
+  notify: restart woodpecker-server
+  ignore_errors: "{{ ansible_check_mode }}"
+
+- name: copy woodpecker-server configuration
+  template:
+    src: etc_woodpecker-server.conf.j2
+    dest: /etc/woodpecker-server.conf
+    owner: root
+    group: woodpecker-server
+    mode: 0640
+  notify: restart woodpecker-server
+  ignore_errors: "{{ ansible_check_mode }}"
+
+- name: install woodpecker-server systemd service/unit file
+  template:
+    src: "etc_systemd_system_woodpecker-server.service.j2"
+    dest: "/etc/systemd/system/woodpecker-server.service"
+    mode: 0644
+  notify:
+    - reload systemd unit files
+    - restart woodpecker-server
+
+##### SERVICE #####
+
+- name: enable/disable start/stop woodpecker-server service
+  systemd:
+    name: woodpecker-server
+    enabled: "{{ woodpecker_server_enable_service }}"
+    state: "{{ 'started' if woodpecker_server_enable_service else 'stopped' }}"
+  ignore_errors: "{{ ansible_check_mode }}"
+
+# re-read systemd service configuration
+- name: apply configuration (flush handlers)
+  meta: flush_handlers
\ No newline at end of file
diff --git a/roles/woodpecker/templates/etc_ansible_facts.d_woodpecker.fact.j2 b/roles/woodpecker/templates/etc_ansible_facts.d_woodpecker.fact.j2
new file mode 100644
index 00000000..91ae1def
--- /dev/null
+++ b/roles/woodpecker/templates/etc_ansible_facts.d_woodpecker.fact.j2
@@ -0,0 +1,3 @@
+{
+    "ansible_managed": true
+}
diff --git a/roles/woodpecker/templates/etc_apache2_sites-available_woodpecker.conf.j2 b/roles/woodpecker/templates/etc_apache2_sites-available_woodpecker.conf.j2
new file mode 100644
index 00000000..9094cdd7
--- /dev/null
+++ b/roles/woodpecker/templates/etc_apache2_sites-available_woodpecker.conf.j2
@@ -0,0 +1,29 @@
+<VirtualHost *:80>
+    ServerName {{ woodpecker_fqdn }}
+    ServerAdmin webmaster@{{ woodpecker_fqdn }}
+{% if woodpecker_https_mode == 'selfsigned' %}
+    # Redirect all HTTP requests to HTTPS
+    RewriteEngine On
+    RewriteCond %{HTTPS} off
+    RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI}
+{% endif %}
+</VirtualHost>
+
+{% if woodpecker_https_mode == 'letsencrypt' %}
+MDomain {{ woodpecker_fqdn }}
+{% endif %}
+
+<VirtualHost *:443>
+  ServerName  {{ woodpecker_fqdn }}
+  ServerAdmin webmaster@{{ woodpecker_fqdn }}
+  SSLEngine on
+{% if woodpecker_https_mode == 'selfsigned' %}
+  SSLCertificateFile /etc/ssl/certs/{{ woodpecker_fqdn }}.crt
+  SSLCertificateKeyFile /etc/ssl/private/{{ woodpecker_fqdn }}.key
+{% endif %}
+
+  ProxyPreserveHost On
+  ProxyPass / http://localhost:8721/
+  ProxyPassReverse / http://localhost:8721/
+
+</VirtualHost>
diff --git a/roles/woodpecker/templates/etc_netdata_go.d_httpcheck.conf.d_woodpecker.conf.j2 b/roles/woodpecker/templates/etc_netdata_go.d_httpcheck.conf.d_woodpecker.conf.j2
new file mode 100644
index 00000000..10375803
--- /dev/null
+++ b/roles/woodpecker/templates/etc_netdata_go.d_httpcheck.conf.d_woodpecker.conf.j2
@@ -0,0 +1,9 @@
+{% if woodpecker_server_enable_service %}
+  - name: woodpecker
+    timeout: 1
+    tls_skip_verify: true
+    update_every: 10
+    url: https://127.0.0.1
+    headers:
+      Host: "{{ woodpecker_fqdn }}"
+{% endif %}
diff --git a/roles/woodpecker/templates/etc_netdata_health.d_systemdunits.conf.d_woodpecker.conf.j2 b/roles/woodpecker/templates/etc_netdata_health.d_systemdunits.conf.d_woodpecker.conf.j2
new file mode 100644
index 00000000..46b29797
--- /dev/null
+++ b/roles/woodpecker/templates/etc_netdata_health.d_systemdunits.conf.d_woodpecker.conf.j2
@@ -0,0 +1,20 @@
+{% if woodpecker_setup_server %}
+    alarm: systemd_service_woodpecker_server
+       on: systemdunits_service_units.service_unit_state
+     calc: $woodpecker_server
+    every: 10s
+     crit: ($this = 5)
+    units: state
+     info: woodpecker-server service status
+       to: sysadmin
+{% endif %}
+{% if woodpecker_setup_agent %}
+    alarm: systemd_service_woodpecker_agent
+       on: systemdunits_service_units.service_unit_state
+     calc: $woodpecker_agent
+    every: 10s
+     crit: ($this = 5)
+    units: state
+     info: woodpecker-agent service status
+       to: sysadmin
+{% endif %}
\ No newline at end of file
diff --git a/roles/woodpecker/templates/etc_systemd_system_woodpecker-agent.service.j2 b/roles/woodpecker/templates/etc_systemd_system_woodpecker-agent.service.j2
new file mode 100644
index 00000000..14a676a7
--- /dev/null
+++ b/roles/woodpecker/templates/etc_systemd_system_woodpecker-agent.service.j2
@@ -0,0 +1,20 @@
+# Systemd unit file for woodpecker-agent
+[Unit]
+Description=woodpecker-agent - continuous integration agent
+After=syslog.target
+After=network.target
+
+[Service]
+RestartSec=2s
+Type=simple
+User=woodpecker-agent
+Group=woodpecker-agent
+WorkingDirectory=/var/lib/woodpecker-agent
+ExecStart=/usr/local/bin/woodpecker-agent
+EnvironmentFile=/etc/woodpecker-agent.conf
+Restart=on-failure
+#StartLimitIntervalSec=10s
+StartLimitBurst=4
+
+[Install]
+WantedBy=multi-user.target
diff --git a/roles/woodpecker/templates/etc_systemd_system_woodpecker-server.service.j2 b/roles/woodpecker/templates/etc_systemd_system_woodpecker-server.service.j2
new file mode 100644
index 00000000..a34999e6
--- /dev/null
+++ b/roles/woodpecker/templates/etc_systemd_system_woodpecker-server.service.j2
@@ -0,0 +1,21 @@
+# Systemd unit file for woodpecker-server
+[Unit]
+Description=woodpecker-server - continuous integration server
+After=syslog.target
+Requires=network-online.target
+After=network-online.target
+
+[Service]
+RestartSec=2s
+Type=simple
+User=woodpecker-server
+Group=woodpecker-server
+WorkingDirectory=/var/lib/woodpecker-server
+ExecStart=/usr/local/bin/woodpecker-server
+EnvironmentFile=/etc/woodpecker-server.conf
+Restart=on-failure
+StartLimitIntervalSec=10s
+StartLimitBurst=4
+
+[Install]
+WantedBy=multi-user.target
diff --git a/roles/woodpecker/templates/etc_woodpecker-agent.conf.j2 b/roles/woodpecker/templates/etc_woodpecker-agent.conf.j2
new file mode 100644
index 00000000..a80cba27
--- /dev/null
+++ b/roles/woodpecker/templates/etc_woodpecker-agent.conf.j2
@@ -0,0 +1,6 @@
+WOODPECKER_SERVER={{ woodpecker_agent_server }}
+WOODPECKER_AGENT_SECRET={{ woodpecker_agent_secret }}
+WOODPECKER_LOG_LEVEL={{ woodpecker_agent_log_level }}
+WOODPECKER_HOSTNAME={{ woodpecker_agent_hostname }}
+WOODPECKER_MAX_PROCS={{ woodpecker_agent_max_procs }}
+WOODPECKER_BACKEND={{ woodpecker_agent_backend }}
diff --git a/roles/woodpecker/templates/etc_woodpecker-server.conf.j2 b/roles/woodpecker/templates/etc_woodpecker-server.conf.j2
new file mode 100644
index 00000000..32755824
--- /dev/null
+++ b/roles/woodpecker/templates/etc_woodpecker-server.conf.j2
@@ -0,0 +1,13 @@
+{% if woodpecker_gitea %}
+WOODPECKER_GITEA=true
+WOODPECKER_GITEA_URL={{ woodpecker_gitea_url }}
+WOODPECKER_GITEA_CLIENT={{ woodpecker_gitea_client_id }}
+WOODPECKER_GITEA_SECRET={{ woodpecker_gitea_client_secret }}
+{{ 'WOODPECKER_GITEA_SKIP_VERIFY=true' if woodpecker_gitea_skip_verify }}
+{% endif %}
+WOODPECKER_LOG_LEVEL={{ woodpecker_server_log_level }}
+WOODPECKER_SERVER_ADDR=:8721
+WOODPECKER_GRPC_ADDR=:8722
+WOODPECKER_ADMIN={{ woodpecker_admin }}
+WOODPECKER_AGENT_SECRET={{ woodpecker_agent_secret }}
+WOODPECKER_HOST=https://{{ woodpecker_fqdn }}
diff --git a/tests/playbooks/xsrv-test/playbook.yml b/tests/playbooks/xsrv-test/playbook.yml
index 96b6e3ae..e35a39dd 100644
--- a/tests/playbooks/xsrv-test/playbook.yml
+++ b/tests/playbooks/xsrv-test/playbook.yml
@@ -14,6 +14,7 @@
     - nodiscc.xsrv.rss_bridge # the RSS feed for websites missing it
     - nodiscc.xsrv.shaarli # bookmarking & link sharing
     - nodiscc.xsrv.gitea # git service/software forge
+    - nodiscc.xsrv.woodpecker # continuous integration engine
     - nodiscc.xsrv.transmission # bittorrent client
     - nodiscc.xsrv.mumble # VoIP/voice chat server
     - nodiscc.xsrv.docker # application containerization
-- 
2.30.2

